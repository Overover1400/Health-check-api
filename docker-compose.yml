version: '3.7'

services:
  db:
    container_name: "health_check_api_db"
    platform: linux/x86_64
    build:
      context: .
      dockerfile: db.Dockerfile
    networks:
      - default
    restart: always
    # setting some env vars to create the DB
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "api"
      MYSQL_USER: "hamed"
      MYSQL_PASSWORD: "root"


    # we mount a data volume to make sure we don't lose data
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password


  api:
    container_name: "health_check_api"
    # we want to use the image which is build from our api.db.api.db.Dockerfile
    build:
      context: .
      dockerfile: api.Dockerfile
    networks:
      - default
    restart: always
    ports:
      - "8080:8080"
    # we are depending on the mysql backend
    depends_on:
      - db
    # We mount the working dir into the container, handy for development
    # This is what makes the hot reloading work inside of a docker container
    volumes:
      - .:/app/
networks:
   default:
volumes:
   mysql_data:

